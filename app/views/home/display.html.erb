<!DOCTYPE html>

<%# :1013_test用.pdf
curl -X POST -H "Content-Type: application/json" -d "{""keycode"": ""download_SO1AZAhF9C1o7kaB52CK"", ""id"": ""1Cb3pJG-8A6LCY8XvlXl_vgCjPk9OoJxu""}" http://localhost:3000/open_pdf
 %>
<%# :ストレスケア
curl -X POST -H "Content-Type: application/json" -d "{""keycode"": ""download_SO1AZAhF9C1o7kaB52CK"", ""id"": ""1VXKVUAG5XiAp99-OLp5CUvGxwi3RvtY1""}" http://localhost:3000/open_pdf
 %>
<%#：待機画像
curl -X POST -H "Content-Type: application/json" -d "{""keycode"": ""download_SO1AZAhF9C1o7kaB52CK"", ""id"": ""1VXKVUAG5XiAp99-OLp5CUvGxwi3RvtY1""}" http://localhost:3000/open_pdf
%>

  <html>
    <head>
      <base target="_top">
        <style>
          * {
            margin: 0;
            padding: 0;
            overflow: hidden;
            height:100vh;
          }
          iframe {
            border:none;
            width:100%;
            height:100%;
          }
        </style>
    </head>

    <body>
      <!-- 表示用　iframe-->
      



  <iframe id="content" src='/temp/default.pdf'></iframe>
<script>
  // PDFの表示と削除処理
  window.onload = function() {
    // iframe要素を取得
    let contentFrame = document.getElementById("content");

    // 初期表示は/temp/default.pdf
    contentFrame.src = "/temp/default.pdf";

    // 1分後に実行する処理
    setTimeout(function() {
      // 仮にdownload.pdfが生成されたと仮定して、iframeのsrcを変更
      contentFrame.src = "/temp/download.pdf";

      // download.pdfがiframeに読み込まれたら、次の処理に移る
      contentFrame.onload = function() {
        // (/delete_pdf): DELETEメソッドでリクエスト送信
        fetch('/delete_pdf', {
          method: 'DELETE'
        })
        .then(() => {
          console.log("delete_pdf成功");
        })
        .catch(() => {
          console.log("delete_pdf失敗");
          // エラーが発生した場合は、default.pdfを再表示
          contentFrame.src = "/temp/default.pdf";
        });
      };
    }, 20000); // 1分後
  };
</script>



<!--
<iframe id="content" src='/temp/default.pdf'></iframe>
        <script>
          // 関数：PDFの表示と削除処理：ページが完全に読み込まれた後の処理
          window.onload = function() {
            // iframe要素を取得
            let contentFrame = document.getElementById("content");

            // 初期表示は/temp/default.pdf
            contentFrame.src = "/temp/default.pdf";

            // 指定時間後に実行する処理
            setTimeout(function() {
              // download.pdfが生成され、iframeのsrcを変更
              contentFrame.src = "/temp/download.pdf";

              // download.pdfがiframeに読み込まれたら、次の処理に移る
              contentFrame.onload = function() {
                // (/delete_pdf): DELETEメソッドでリクエスト送信
                fetch('/delete_pdf', {
                  method: 'DELETE'
                })
                .then(() => {
                  console.log("delete_pdf成功");
                })
                .catch(() => {
                  console.log("delete_pdf失敗");
                  // エラーが発生した場合は、default.pdfを再表示
                  contentFrame.src = "/temp/default.pdf";
                });
              };
             }, 10); // 10秒：timde_set
          };
    </body>
  </html>
-->