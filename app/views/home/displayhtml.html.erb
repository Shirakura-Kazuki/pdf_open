
<!DOCTYPE html>
<html>
  <head>
    <base target="_top">
    <style>
      * {
        margin: 0;
        padding: 0;
        overflow: hidden;
        height:100vh;
      }
      iframe {
        border:none;
        width:100%;
        height:100%;
      }
    </style>
  </head>
  <body>
    <!-- 初期値として指定されたURLをsrc属性に設定 -->
    <iframe id="content" src="https://drive.google.com/file/d/1iZnyc-l0SIIwhd78N7Dd2593Soilqggs/preview"></iframe>
    
    <%# Pusherを通じてリアルタイムにPDFのURLを受け取り、そのURLをページ内の特定の要素に適用して、PDFを表示したり、リンクとして提供したりする動作 %>
    <script>
    //ページロード完了時に関数を実行する
    document.addEventListener("DOMContentLoaded", function() {
        // // Pusherのインスタンスを作成
        // var pusher = new Pusher('32f2640be6b94e4b6afe', {
        // cluster: 'ap3'
        // });
        //my-channel:サブスクライブ（このチャンネルのevent通知をうけとる）
        // var channel = pusher.subscribe('my-channel');
        //my-event:`my-channel`の要素（dataはイベントと共に送信されたデータ）：`data.message`にPDFのURL
        channel.bind('my-event', function(data) {
            
        // 受け取ったPDFのURLをiframeのsrc属性に設定
        //ID:`content`（`iframe`:`src`属性):受け取った`data.message`（PDFのURL）に設定。これにより、`iframe`で指定されたURLのコンテンツが表示されます。
        document.getElementById('content').src = data.message;

        });
    });
    </script>
  </body>
</html>



<!-- JavaScript to delete the PDF after 5 minutes -->
<script>
  window.onload = function() {
    setTimeout(function(){
      fetch('/delete_pdf', {
        method: 'DELETE'
      });
    }, 60000); // 5 minutes
  };
</script>




<%# テスト用 %>
`look_1` と `look_2` の両方が `true` の場合、または片方が `false` の場合、
さらに両方が `false` の場合でそれぞれ異なる動作をさせたいということですね。

以下のように条件分岐を追加することで、指定した動作を実装できます。

```ruby
if look_1 && look_2
  # 両方がtrueの場合：Pusherでイベントをトリガー
  begin
    Pusher.trigger('my-channel', 'my-event', { message: @id_1 + @id_2 })
    head :ok
  rescue => e
    render json: { error: "Pusherでエラーが発生しました: #{e.message}" }, status: :internal_server_error
  end
elsif look_1 && !look_2
  # look_1はtrueだがlook_2がfalseの場合
  render json: { error: "look_2: NGの為、再発行してください" }, status: :internal_server_error
elsif !look_1 && look_2
  # look_1はfalseだがlook_2がtrueの場合
  render json: { error: "look_1: NGの為、再発行してください" }, status: :internal_server_error
else
  # 両方がfalseの場合
  render json: { error: "ステータス異常！！再発行してください" }, status: :internal_server_error
end
```

このようにすることで、`look_1` と `look_2` の状態に応じて適切な処理が行われます。


